/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/admin/reports/tournament.js":
/*!**************************************************!*\
  !*** ./resources/js/admin/reports/tournament.js ***!
  \**************************************************/
/***/ (() => {

eval("var selectTournament = '';\nvar selectMatch = '';\nvar matchId = '';\nvar tournamentId = '';\nvar loader = \"\\n<div class=\\\"spinner\\\">\\n    <div class=\\\"bounce1\\\"></div>\\n    <div class=\\\"bounce2\\\"></div>\\n    <div class=\\\"bounce3\\\"></div>\\n    <div class=\\\"bounce4\\\"></div>\\n    <div class=\\\"bounce5\\\"></div>\\n</div>\\n\";\nvar clearData = \"\\n<div class=\\\"alert alert-primary\\\" role=\\\"alert\\\">\\n    Clear Data\\n</div>\\n\";\n$(function () {\n  handleSearchAbleFields();\n  $(\".search-btn\").click(getInformation);\n  $(\".reset-btn\").click(informationReset);\n});\ninformationReset = function informationReset() {\n  selectTournament.clear();\n  selectMatch.clear();\n  $(\".poll_infomation\").html(clearData);\n  $(\".submitted_poll_measurement\").html(clearData);\n  $(\".submitted_poll_measurement_chart_view\").html(clearData);\n};\ngetInformation = function getInformation() {\n  tournamentId = selectTournament.getValue();\n  matchId = selectMatch.getValue();\n  tournamentId = 1;\n  matchId = 1;\n  if (tournamentId && matchId) {\n    poll_infomation(tournamentId, matchId);\n  }\n};\npoll_infomation = function poll_infomation(tournamentId, matchId) {\n  axios.get(\"/report/tournament/fetch-poll-info/\".concat(tournamentId, \"/\").concat(matchId)).then(function (response) {\n    setPollInfo(response.data.data);\n    setSubmittedPollMeasurementInfo(response.data.data);\n    setSubPollMeasInfoChartView(response.data.data);\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n};\nsetSubPollMeasInfoChartView = function setSubPollMeasInfoChartView(getData) {\n  $(\".submitted_poll_measurement_chart_view\").html(\"<canvas id=\\\"poll_measurement_chart_view\\\"></canvas>\");\n  var labels = [];\n  var submittedPoll = [];\n  var submitted = [];\n  var correct = [];\n  var wrong = [];\n  var _loop = function _loop(day) {\n    var pollCount = 0;\n    var correctPollCount = 0;\n    var wrongPollCount = 0;\n    getData.score.map(function (item) {\n      if (item.day == day) {\n        pollCount++;\n        if (item.answer_status == \"correct\") {\n          correctPollCount++;\n        } else {\n          wrongPollCount++;\n        }\n      }\n    });\n    submittedPoll.push({\n      day: day,\n      submitted: pollCount,\n      correct: correctPollCount,\n      wrong: wrongPollCount\n    });\n  };\n  for (var day = 1; day <= getData.match.total_days; day++) {\n    _loop(day);\n  }\n  submittedPoll.map(function (item) {\n    labels.push(item.day);\n    submitted.push(item.submitted);\n    correct.push(item.correct);\n    wrong.push(item.wrong);\n  });\n  var ctx = $('#poll_measurement_chart_view');\n  var data = {\n    labels: labels,\n    datasets: [{\n      label: 'Submitted Poll',\n      data: submitted,\n      borderColor: '#9059FF',\n      backgroundColor: '#E6D9FF',\n      borderWidth: 1\n    }, {\n      label: 'Correct Poll',\n      data: correct,\n      borderColor: '#198754',\n      backgroundColor: '#D3F5F5',\n      borderWidth: 1\n    }, {\n      label: 'Wrong Poll',\n      data: wrong,\n      borderColor: '#FF6D8D',\n      backgroundColor: '#FFD9E1',\n      borderWidth: 1\n    }]\n  };\n  new Chart(ctx, {\n    type: 'bar',\n    data: data\n  });\n};\nsetSubmittedPollMeasurementInfo = function setSubmittedPollMeasurementInfo(data) {\n  var html = '';\n  if (data) {\n    var total_submitted_poll = data.score ? data.score.length : 0;\n    html += \"<div class=\\\"\\\"><b>Total Submitted:</b> \".concat(total_submitted_poll, \"</div>\");\n    if (total_submitted_poll == 0) {\n      html += \"<div class=\\\" mt-3\\\">\\n                        <b>Submitted Poll Info:</b> No Polls Found\\n                        </div>\";\n    } else {\n      html += \"<div class=\\\"table-responsive mt-3\\\">\\n                        <table class=\\\"table table-bordered\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Day</th>\\n                                    <th>Submitted</th>\\n                                    <th>Correct</th>\\n                                    <th>Wrong</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\";\n      var _loop2 = function _loop2(day) {\n        var pollCount = 0;\n        var correctPollCount = 0;\n        var wrongPollCount = 0;\n        data.score.map(function (item) {\n          if (item.day == day) {\n            pollCount++;\n            if (item.answer_status == \"correct\") {\n              correctPollCount++;\n            } else {\n              wrongPollCount++;\n            }\n          }\n        });\n        html += \"<tr>\\n                            <td>\".concat(day, \"</td>\\n                            <td>\").concat(pollCount, \"</td>\\n                            <td>\").concat(correctPollCount, \"</td>\\n                            <td>\").concat(wrongPollCount, \"</td>\\n                        </tr>\");\n      };\n      for (var day = 1; day <= data.match.total_days; day++) {\n        _loop2(day);\n      }\n      html += \"</tbody>\\n                    </table>\\n                </div>\";\n    }\n    $(\".submitted_poll_measurement\").html(html);\n  }\n};\nsetPollInfo = function setPollInfo(data) {\n  if (data) {\n    var total_days = data.match ? data.match.total_days : 0;\n    var pollInfo = data.pollInfo ? data.pollInfo : [];\n    var pollDay = data.match ? data.match.poll_day : 0;\n    var html = '';\n    html += \"<div class=\\\"\\\"><b>Match Durations:</b> \".concat(total_days, \" days</div>\");\n    html += \"<div class=\\\"\\\"><b>Current Poll Day:</b> \".concat(pollDay, \" day</div>\");\n    html += \"<div class=\\\"\\\"><b>Total Poll:</b> \".concat(pollInfo.length, \"</div>\");\n    if (pollInfo.length == 0) {\n      html += \"<div class=\\\" mt-3\\\">\\n                        <b>Poll Info:</b> No Polls Found\\n                        </div>\";\n    } else {\n      html += \"<div class=\\\"table-responsive mt-3\\\">\\n                        <table class=\\\"table table-bordered\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Day</th>\\n                                    <th>Count of Poll</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\";\n      for (var day = 1; day <= total_days; day++) {\n        var pollCount = 0;\n        for (var i = 0; i < pollInfo.length; i++) {\n          if (pollInfo[i].day == day) {\n            pollCount++;\n          }\n        }\n        html += \"<tr>\\n                            <td>\".concat(day, \"</td>\\n                            <td>\").concat(pollCount, \"</td>\\n                        </tr>\");\n      }\n      html += \"</tbody>\\n                    </table>\\n                </div>\";\n    }\n    $(\".poll_infomation\").html(html);\n  }\n};\nhandleSearchAbleFields = function handleSearchAbleFields() {\n  selectTournament = new TomSelect(\"#tournament\", {\n    persist: false,\n    create: false,\n    loadingClass: 'loading',\n    maxOptions: 20,\n    minItems: 1,\n    maxItems: 1,\n    valueField: 'id',\n    labelField: 'name',\n    searchField: ['name'],\n    options: [],\n    render: {\n      option: function option(item, escape) {\n        return '<div>' + '<span class=\"name\">' + '<span class=\"label\">' + escape(item.name) + '</span>' + '</span>' + '</div>';\n      },\n      item: function item(_item, escape) {\n        return '<div>' + '<span class=\"name\">' + '<span class=\"label\">' + escape(_item.name) + '</span>' + '</span>' + '</div>';\n      }\n    },\n    load: function load(query, callback) {\n      if (!query.length) return callback();\n      axios.get(\"/report/tournament/fetch-by-name/\".concat(query)).then(function (response) {\n        callback(response.data);\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  });\n  selectTournament.on('change', function () {\n    tournamentId = selectTournament.getValue();\n  });\n  selectMatch = new TomSelect(\"#match\", {\n    persist: false,\n    create: false,\n    loadingClass: 'loading',\n    maxOptions: 20,\n    minItems: 1,\n    maxItems: 1,\n    valueField: 'id',\n    labelField: 'title',\n    searchField: ['title'],\n    options: [],\n    render: {\n      option: function option(item, escape) {\n        return '<div>' + '<span class=\"title\">' + '<span class=\"label\">' + escape(item.title) + '</span>' + '</span>' + '</div>';\n      },\n      item: function item(_item2, escape) {\n        return '<div>' + '<span class=\"title\">' + '<span class=\"label\">' + escape(_item2.title) + '</span>' + '</span>' + '</div>';\n      }\n    },\n    load: function load(query, callback) {\n      if (!query.length) return callback();\n      axios.get(\"/report/player/search-by-match-title/\".concat(query, \"/\").concat(tournamentId)).then(function (response) {\n        callback(response.data);\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/admin/reports/tournament.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/admin/reports/tournament.js"]();
/******/ 	
/******/ })()
;